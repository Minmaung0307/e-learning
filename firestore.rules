// Firestore rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() &&
             get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == "admin";
    }

    match /payments/{id} {
      allow create: if isSignedIn()
        && request.resource.data.uid == request.auth.uid
        && request.resource.data.amount is number
        && request.resource.data.courseId is string;
      allow read: if isAdmin();           // only admins can read payments
      allow update, delete: if false;
    }

    match /enrollments/{id} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if isSignedIn() && (resource.data.uid == request.auth.uid || isAdmin());
      allow update, delete: if false;
    }

    match /courses/{id} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if isSignedIn() &&
        (resource.data.ownerUid == request.auth.uid || isAdmin());
    }

    match /messages/{id} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
    }

    match /roles/{uid} {
      allow read: if isSignedIn();
      allow write: if isAdmin() &&
        request.resource.data.role in ["student","instructor","admin"];
    }

    match /profiles/{uid} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && uid == request.auth.uid;
      allow delete: if isSignedIn() && (uid == request.auth.uid || isAdmin());
    }

    match /attempts/{id} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if isSignedIn() && (resource.data.uid == request.auth.uid || isAdmin());
    }

    match /tasks/{id} {
      allow read, create, update, delete:
        if isSignedIn() && (
          (resource != null && resource.data.uid == request.auth.uid) ||
          (request.resource != null && request.resource.data.uid == request.auth.uid)
        );
    }

    match /announcements/{id} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}