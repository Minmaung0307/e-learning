// Firestore Security Rules (LearnHub)
rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // Public profiles (read), user can write own
    match /profiles/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // Roles (admin sets)
    match /roles/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
                   && request.auth.token.email in ['admin@learnhub.com']; // add more admin emails here
    }

    // Courses (owned by instructors/admin)
    match /courses/{id} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // checked in app for instructor/admin
      allow update, delete: if request.auth != null
                            && (resource.data.ownerUid == request.auth.uid);
    }

    // Enrollments: user can enroll self
    match /enrollments/{id} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    // Quizzes: created by instructor/admin (client-enforced)
    match /quizzes/{id} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null;
    }

    // Attempts: only owner can write/read own
    match /attempts/{id} {
      allow read, write: if request.auth != null && (
        (request.method == 'create' && request.resource.data.uid == request.auth.uid) ||
        (request.method != 'create' && resource.data.uid == request.auth.uid)
      );
    }

    // Messages: anyone authed can read; write if author is self
    match /messages/{id} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    // Tasks: private to user
    match /tasks/{id} {
      allow read, write: if request.auth != null && (
        (request.method == 'create' && request.resource.data.uid == request.auth.uid) ||
        (request.method != 'create' && resource.data.uid == request.auth.uid)
      );
    }
  }
}