rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }

    match /profiles/{uid} {
      allow read: if signedIn();
      allow write: if signedIn() && (request.auth.uid == uid || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin');
    }

    match /roles/{uid} {
      allow read: if signedIn();
      allow write: if signedIn() && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
    }

    match /courses/{id} {
      allow read: if signedIn();
      allow create: if signedIn();
      allow update, delete: if signedIn() && (resource.data.ownerUid == request.auth.uid || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin');
    }

    match /enrollments/{id} {
      allow read: if signedIn();
      allow create: if signedIn() && request.resource.data.uid == request.auth.uid;
      allow delete, update: if signedIn() && (resource.data.uid == request.auth.uid || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin');
    }

    match /quizzes/{id} {
      allow read: if signedIn();
      allow create: if signedIn();
      allow update, delete: if signedIn() && (resource.data.ownerUid == request.auth.uid || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin');
    }

    match /attempts/{id} {
      allow read: if signedIn() && (resource.data.uid == request.auth.uid || get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin');
      allow create: if signedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    match /tasks/{id} {
      allow read, create: if signedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if signedIn() && resource.data.uid == request.auth.uid;
    }

    match /messages/{id} {
      allow read: if signedIn();
      allow create: if signedIn();
      allow update, delete: if false;
    }

    match /notes/{id} {
      allow read, write: if signedIn() && request.auth.uid == resource.data.uid;
    }

    match /announcements/{id} {
      allow read: if signedIn();
      allow write: if signedIn() && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'admin';
    }

    match /{document=**} {
      allow read, write: if signedIn();
    }
  }
}