rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isSelf(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == "admin";
    }

    function isInstructor() {
      return isSignedIn() && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == "instructor";
    }

    match /roles/{uid} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
      allow write: if isAdmin();
    }

    match /profiles/{uid} {
      allow read: if isSignedIn();
      allow write: if isSelf(uid) || isAdmin();
    }

    match /courses/{id} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin() || isInstructor();
    }

    match /enrollments/{id} {
      allow read: if isSignedIn() && (resource.data.uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.uid == request.auth.uid;
    }

    match /quizzes/{id} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin() || isInstructor();
    }

    match /attempts/{id} {
      allow read: if isSignedIn() && (resource.data.uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    match /tasks/{id} {
      allow read, update, delete: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
    }

    match /messages/{id} {
      allow read, create: if isSignedIn();
      allow update, delete: if false;
    }

    match /notes/{id} {
      allow read, update, delete: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
    }

    match /announcements/{id} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin() || isInstructor();
    }
  }
}